:host {
  /**
   * @prop --size: Size of the checkbox icon
   *
   * @prop --background: Background of the checkbox icon
   * @prop --background-checked: Background of the checkbox icon when checked
   *
   * @prop --border-color: Border color of the checkbox icon
   * @prop --border-radius: Border radius of the checkbox icon
   * @prop --border-width: Border width of the checkbox icon
   * @prop --border-style: Border style of the checkbox icon
   * @prop --border-color-checked: Border color of the checkbox icon when checked
   *
   * @prop --transition: Transition of the checkbox icon
   *
   * @prop --checkmark-color: Color of the checkbox checkmark when checked
   * @prop --checkmark-width: Stroke width of the checkbox checkmark
   */
  --background-checked: var(--ion-color-primary, #3880ff);
  --border-color-checked: var(--ion-color-primary, #3880ff);
  --checkmark-color: var(--ion-color-primary-contrast, #fff);
  --checkmark-width: 1;
  --transition: none;
  display: inline-block;
  position: relative;
  user-select: none;
  z-index: 2;
}

:host(.ion-color) {
  --background-checked: var(--ion-color-base);
  --border-color-checked: var(--ion-color-base);
  --checkmark-color: var(--ion-color-contrast);
}

label {
  left: 0;
  top: 0;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  margin-bottom: 0;
  position: absolute;
  width: 100%;
  height: 100%;
  border: 0;
  background: transparent;
  cursor: pointer;
  appearance: none;
  outline: none;
  display: flex;
  align-items: center;
  opacity: 0;
}
[dir=rtl] label, :host-context([dir=rtl]) label {
  left: unset;
  right: unset;
  right: 0;
}

label::-moz-focus-inner {
  border: 0;
}

input {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  width: 100%;
  height: 100%;
  margin: 0;
  padding: 0;
  border: 0;
  outline: 0;
  clip: rect(0 0 0 0);
  opacity: 0;
  overflow: hidden;
  -webkit-appearance: none;
  -moz-appearance: none;
}

.checkbox-icon {
  border-radius: var(--border-radius);
  display: block;
  position: relative;
  width: 100%;
  height: 100%;
  transition: var(--transition);
  border-width: var(--border-width);
  border-style: var(--border-style);
  border-color: var(--border-color);
  background: var(--background);
  box-sizing: border-box;
}

.checkbox-icon path {
  fill: none;
  stroke: var(--checkmark-color);
  stroke-width: var(--checkmark-width);
  opacity: 0;
}

:host(.checkbox-checked) .checkbox-icon,
:host(.checkbox-indeterminate) .checkbox-icon {
  border-color: var(--border-color-checked);
  background: var(--background-checked);
}

:host(.checkbox-checked) .checkbox-icon path,
:host(.checkbox-indeterminate) .checkbox-icon path {
  opacity: 1;
}

:host(.checkbox-disabled) {
  pointer-events: none;
}

:host {
  --border-radius: calc(var(--size) * .125);
  --border-width: 2px;
  --border-style: solid;
  --border-color: rgba(var(--ion-text-color-rgb, 0, 0, 0), 0.51);
  --checkmark-width: 3;
  --background: var(--ion-item-background, var(--ion-background-color, #fff));
  --transition: background 180ms cubic-bezier(0.4, 0, 0.2, 1);
  --size: 18px;
  width: var(--size);
  height: var(--size);
}

.checkbox-icon path {
  stroke-dasharray: 30;
  stroke-dashoffset: 30;
}

:host(.checkbox-checked) .checkbox-icon path,
:host(.checkbox-indeterminate) .checkbox-icon path {
  stroke-dashoffset: 0;
  transition: stroke-dashoffset 90ms linear 90ms;
}

:host(.checkbox-disabled) {
  opacity: 0.3;
}

:host(.in-item) {
  margin-left: 0;
  margin-right: 0;
  margin-top: 18px;
  margin-bottom: 18px;
  display: block;
  position: static;
}

:host(.in-item[slot=start]) {
  margin-left: 4px;
  margin-right: 36px;
  margin-top: 18px;
  margin-bottom: 18px;
}
@supports (margin-inline-start: 0) or (-webkit-margin-start: 0) {
  :host(.in-item[slot=start]) {
    margin-left: unset;
    margin-right: unset;
    -webkit-margin-start: 4px;
    margin-inline-start: 4px;
    -webkit-margin-end: 36px;
    margin-inline-end: 36px;
  }
}