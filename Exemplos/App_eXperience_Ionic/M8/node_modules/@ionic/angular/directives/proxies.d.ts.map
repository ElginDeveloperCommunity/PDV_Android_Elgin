{"version":3,"file":"proxies.d.ts","sources":["proxies.d.ts"],"names":[],"mappingssourcesContent":["import { ChangeDetectorRef, ElementRef, EventEmitter, NgZone } from \"@angular/core\";\nimport { Components } from \"@ionic/core\";\nexport declare interface IonApp extends Components.IonApp {\n}\nexport declare class IonApp {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonAvatar extends Components.IonAvatar {\n}\nexport declare class IonAvatar {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonBackButton extends Components.IonBackButton {\n}\nexport declare class IonBackButton {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonBackdrop extends Components.IonBackdrop {\n}\nexport declare class IonBackdrop {\n    protected z: NgZone;\n    ionBackdropTap: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonBadge extends Components.IonBadge {\n}\nexport declare class IonBadge {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonButton extends Components.IonButton {\n}\nexport declare class IonButton {\n    protected z: NgZone;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonButtons extends Components.IonButtons {\n}\nexport declare class IonButtons {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCard extends Components.IonCard {\n}\nexport declare class IonCard {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCardContent extends Components.IonCardContent {\n}\nexport declare class IonCardContent {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCardHeader extends Components.IonCardHeader {\n}\nexport declare class IonCardHeader {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCardSubtitle extends Components.IonCardSubtitle {\n}\nexport declare class IonCardSubtitle {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCardTitle extends Components.IonCardTitle {\n}\nexport declare class IonCardTitle {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCheckbox extends Components.IonCheckbox {\n}\nexport declare class IonCheckbox {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonChip extends Components.IonChip {\n}\nexport declare class IonChip {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonCol extends Components.IonCol {\n}\nexport declare class IonCol {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonContent extends Components.IonContent {\n}\nexport declare class IonContent {\n    protected z: NgZone;\n    ionScrollStart: EventEmitter<CustomEvent>;\n    ionScroll: EventEmitter<CustomEvent>;\n    ionScrollEnd: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonDatetime extends Components.IonDatetime {\n}\nexport declare class IonDatetime {\n    protected z: NgZone;\n    ionCancel: EventEmitter<CustomEvent>;\n    ionChange: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonFab extends Components.IonFab {\n}\nexport declare class IonFab {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonFabButton extends Components.IonFabButton {\n}\nexport declare class IonFabButton {\n    protected z: NgZone;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonFabList extends Components.IonFabList {\n}\nexport declare class IonFabList {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonFooter extends Components.IonFooter {\n}\nexport declare class IonFooter {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonGrid extends Components.IonGrid {\n}\nexport declare class IonGrid {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonHeader extends Components.IonHeader {\n}\nexport declare class IonHeader {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonIcon extends Components.IonIcon {\n}\nexport declare class IonIcon {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonImg extends Components.IonImg {\n}\nexport declare class IonImg {\n    protected z: NgZone;\n    ionImgWillLoad: EventEmitter<CustomEvent>;\n    ionImgDidLoad: EventEmitter<CustomEvent>;\n    ionError: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonInfiniteScroll extends Components.IonInfiniteScroll {\n}\nexport declare class IonInfiniteScroll {\n    protected z: NgZone;\n    ionInfinite: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonInfiniteScrollContent extends Components.IonInfiniteScrollContent {\n}\nexport declare class IonInfiniteScrollContent {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonInput extends Components.IonInput {\n}\nexport declare class IonInput {\n    protected z: NgZone;\n    ionInput: EventEmitter<CustomEvent>;\n    ionChange: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItem extends Components.IonItem {\n}\nexport declare class IonItem {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItemDivider extends Components.IonItemDivider {\n}\nexport declare class IonItemDivider {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItemGroup extends Components.IonItemGroup {\n}\nexport declare class IonItemGroup {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItemOption extends Components.IonItemOption {\n}\nexport declare class IonItemOption {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItemOptions extends Components.IonItemOptions {\n}\nexport declare class IonItemOptions {\n    protected z: NgZone;\n    ionSwipe: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonItemSliding extends Components.IonItemSliding {\n}\nexport declare class IonItemSliding {\n    protected z: NgZone;\n    ionDrag: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonLabel extends Components.IonLabel {\n}\nexport declare class IonLabel {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonList extends Components.IonList {\n}\nexport declare class IonList {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonListHeader extends Components.IonListHeader {\n}\nexport declare class IonListHeader {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonMenu extends Components.IonMenu {\n}\nexport declare class IonMenu {\n    protected z: NgZone;\n    ionWillOpen: EventEmitter<CustomEvent>;\n    ionWillClose: EventEmitter<CustomEvent>;\n    ionDidOpen: EventEmitter<CustomEvent>;\n    ionDidClose: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonMenuButton extends Components.IonMenuButton {\n}\nexport declare class IonMenuButton {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonMenuToggle extends Components.IonMenuToggle {\n}\nexport declare class IonMenuToggle {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonNav extends Components.IonNav {\n}\nexport declare class IonNav {\n    protected z: NgZone;\n    ionNavWillChange: EventEmitter<CustomEvent>;\n    ionNavDidChange: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonNavLink extends Components.IonNavLink {\n}\nexport declare class IonNavLink {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonNote extends Components.IonNote {\n}\nexport declare class IonNote {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonProgressBar extends Components.IonProgressBar {\n}\nexport declare class IonProgressBar {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRadio extends Components.IonRadio {\n}\nexport declare class IonRadio {\n    protected z: NgZone;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRadioGroup extends Components.IonRadioGroup {\n}\nexport declare class IonRadioGroup {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRange extends Components.IonRange {\n}\nexport declare class IonRange {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRefresher extends Components.IonRefresher {\n}\nexport declare class IonRefresher {\n    protected z: NgZone;\n    ionRefresh: EventEmitter<CustomEvent>;\n    ionPull: EventEmitter<CustomEvent>;\n    ionStart: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRefresherContent extends Components.IonRefresherContent {\n}\nexport declare class IonRefresherContent {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonReorder extends Components.IonReorder {\n}\nexport declare class IonReorder {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonReorderGroup extends Components.IonReorderGroup {\n}\nexport declare class IonReorderGroup {\n    protected z: NgZone;\n    ionItemReorder: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRippleEffect extends Components.IonRippleEffect {\n}\nexport declare class IonRippleEffect {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonRow extends Components.IonRow {\n}\nexport declare class IonRow {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSearchbar extends Components.IonSearchbar {\n}\nexport declare class IonSearchbar {\n    protected z: NgZone;\n    ionInput: EventEmitter<CustomEvent>;\n    ionChange: EventEmitter<CustomEvent>;\n    ionCancel: EventEmitter<CustomEvent>;\n    ionClear: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSegment extends Components.IonSegment {\n}\nexport declare class IonSegment {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSegmentButton extends Components.IonSegmentButton {\n}\nexport declare class IonSegmentButton {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSelect extends Components.IonSelect {\n}\nexport declare class IonSelect {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    ionCancel: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSelectOption extends Components.IonSelectOption {\n}\nexport declare class IonSelectOption {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSkeletonText extends Components.IonSkeletonText {\n}\nexport declare class IonSkeletonText {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSlide extends Components.IonSlide {\n}\nexport declare class IonSlide {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSlides extends Components.IonSlides {\n}\nexport declare class IonSlides {\n    protected z: NgZone;\n    ionSlidesDidLoad: EventEmitter<CustomEvent>;\n    ionSlideTap: EventEmitter<CustomEvent>;\n    ionSlideDoubleTap: EventEmitter<CustomEvent>;\n    ionSlideWillChange: EventEmitter<CustomEvent>;\n    ionSlideDidChange: EventEmitter<CustomEvent>;\n    ionSlideNextStart: EventEmitter<CustomEvent>;\n    ionSlidePrevStart: EventEmitter<CustomEvent>;\n    ionSlideNextEnd: EventEmitter<CustomEvent>;\n    ionSlidePrevEnd: EventEmitter<CustomEvent>;\n    ionSlideTransitionStart: EventEmitter<CustomEvent>;\n    ionSlideTransitionEnd: EventEmitter<CustomEvent>;\n    ionSlideDrag: EventEmitter<CustomEvent>;\n    ionSlideReachStart: EventEmitter<CustomEvent>;\n    ionSlideReachEnd: EventEmitter<CustomEvent>;\n    ionSlideTouchStart: EventEmitter<CustomEvent>;\n    ionSlideTouchEnd: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSpinner extends Components.IonSpinner {\n}\nexport declare class IonSpinner {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonSplitPane extends Components.IonSplitPane {\n}\nexport declare class IonSplitPane {\n    protected z: NgZone;\n    ionSplitPaneVisible: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonTabBar extends Components.IonTabBar {\n}\nexport declare class IonTabBar {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonTabButton extends Components.IonTabButton {\n}\nexport declare class IonTabButton {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonText extends Components.IonText {\n}\nexport declare class IonText {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonTextarea extends Components.IonTextarea {\n}\nexport declare class IonTextarea {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    ionInput: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonThumbnail extends Components.IonThumbnail {\n}\nexport declare class IonThumbnail {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonTitle extends Components.IonTitle {\n}\nexport declare class IonTitle {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonToggle extends Components.IonToggle {\n}\nexport declare class IonToggle {\n    protected z: NgZone;\n    ionChange: EventEmitter<CustomEvent>;\n    ionFocus: EventEmitter<CustomEvent>;\n    ionBlur: EventEmitter<CustomEvent>;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\nexport declare interface IonToolbar extends Components.IonToolbar {\n}\nexport declare class IonToolbar {\n    protected z: NgZone;\n    protected el: HTMLElement;\n    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);\n}\n"]}