{"version":3,"sources":["../../projects/hide-keyboard/src/lib/hide-keyboard.directive.ts","../../projects/hide-keyboard/src/lib/hide-keyboard.module.ts"],"names":["HideKeyboardDirective","el","_this","this","focusTimeout","readonly","setReadOnly","setTimeout","nativeElement","focus","prototype","onFocus","onClick","input","value","readOnly","children","length","Directive","args","selector","ElementRef","HostListener","HideKeyboardModule","forRoot","ngModule","providers","NgModule","declarations","exports"],"mappings":"8UASC,SAAAA,EAAoBC,GAApB,IAAAC,EAAAC,KAAoBA,KAAAF,GAAAA,EAFTE,KAAAC,aAAe,IAGzBD,KAAKE,UAAW,EAChBF,KAAKG,YAAYH,KAAKE,UAEtBE,YAAW,WACVL,EAAKD,GAAGO,cAAcC,UACpBN,KAAKC,qBAGcJ,EAAAU,UAAAC,QAAA,WAAA,IAAAT,EAAAC,KACtBA,KAAKE,UAAW,EAChBF,KAAKG,YAAYH,KAAKE,UAEjBF,KAAKE,UACTF,KAAKG,aAAaH,KAAKE,UAExBE,YAAW,WACVL,EAAKG,UAAW,EAChBH,EAAKI,YAAYJ,EAAKG,YACpB,MAIDL,EAAAU,UAAAE,QAAA,SAAQC,GAAR,IAAAX,EAAAC,KACFA,KAAKE,UAAW,EAChBF,KAAKG,YAAYH,KAAKE,UAEtBE,YAAW,WACVL,EAAKG,UAAW,EAChBH,EAAKI,YAAYJ,EAAKG,UACtBH,EAAKD,GAAGO,cAAcC,UACpBN,KAAKC,eAGDJ,EAAAU,UAAAJ,YAAA,SAAYQ,GACnBX,KAAKF,GAAGO,cAAcO,SAAWD,EAC7BX,KAAKF,GAAGO,cAAcQ,UAAYb,KAAKF,GAAGO,cAAcQ,SAASC,OAAS,IAC7Ed,KAAKF,GAAGO,cAAcQ,SAAS,GAAGD,SAAWD,EACzCX,KAAKF,GAAGO,cAAcQ,SAASC,OAAS,IACvCd,KAAKF,GAAGO,cAAcQ,SAAS,GAAGD,SAAWD,8BA9CpDI,EAAAA,UAASC,KAAA,CAAC,CACPC,SAAU,8DAHMC,EAAAA,+CAkBlBC,EAAAA,aAAYH,KAAA,CAAC,0BAaVG,EAAAA,aAAYH,KAAA,CAAC,QAAS,CAAC,sCCxB5B,SAAAI,YACQA,EAAAC,QAAP,WACC,MAAO,CACNC,SAAUF,EACVG,UAAW,8BARbC,EAAAA,SAAQR,KAAA,CAAC,CACTS,aAAc,CAAC5B,GACf6B,QAAS,CAAC7B","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[hideKeyboard]'\r\n})\r\nexport class HideKeyboardDirective {\r\n    private readonly: boolean;\r\n    private focusTimeout = 500;\r\n\r\n\tconstructor(private el: ElementRef) {\r\n\t\tthis.readonly = true;\r\n\t\tthis.setReadOnly(this.readonly)\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.el.nativeElement.focus();\r\n\t\t}, this.focusTimeout);\r\n\t}\r\n\r\n\t@HostListener('focus') onFocus() {\r\n\t\tthis.readonly = true;\r\n\t\tthis.setReadOnly(this.readonly);\r\n\r\n\t\tif (!this.readonly) {\r\n\t\t\tthis.setReadOnly(!this.readonly);\r\n\t\t}\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.readonly = false;\r\n\t\t\tthis.setReadOnly(this.readonly);\r\n\t\t}, 100);\r\n\t};\r\n\r\n    @HostListener('click', ['$event.target']) \r\n    onClick(input) {\r\n\t\tthis.readonly = true;\r\n\t\tthis.setReadOnly(this.readonly);\r\n\r\n\t\tsetTimeout(() => {\r\n\t\t\tthis.readonly = false;\r\n\t\t\tthis.setReadOnly(this.readonly);\r\n\t\t\tthis.el.nativeElement.focus();\r\n\t\t}, this.focusTimeout);\r\n\t}\r\n\r\n\tprivate setReadOnly(value: boolean): void {\r\n\t\tthis.el.nativeElement.readOnly = value;\r\n\t\tif (this.el.nativeElement.children && this.el.nativeElement.children.length > 0) {\r\n\t\t\tthis.el.nativeElement.children[0].readOnly = value;\r\n\t\t\tif (this.el.nativeElement.children.length > 1) {\r\n        this.el.nativeElement.children[1].readOnly = value;\r\n      }\r\n\t\t};\r\n\t};\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HideKeyboardDirective } from './hide-keyboard.directive';\n\n@NgModule({\n\tdeclarations: [HideKeyboardDirective],\n\texports: [HideKeyboardDirective]\n})\nexport class HideKeyboardModule {\n\tstatic forRoot(): ModuleWithProviders<HideKeyboardModule> {\n\t\treturn {\n\t\t\tngModule: HideKeyboardModule,\n\t\t\tproviders: []\n\t\t};\n\t}\n}\n"]}