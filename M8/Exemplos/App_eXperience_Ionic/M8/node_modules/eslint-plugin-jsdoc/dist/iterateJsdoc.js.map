{"version":3,"sources":["../src/iterateJsdoc.js"],"names":["globalState","Map","skipSeeLink","parser","str","data","tag","test","parseComment","commentNode","indent","trim","value","parsers","commentParser","PARSERS","parse_tag","includes","parse_type","preWS","match","length","remainder","slice","pos","search","name","optional","source","parse_name","errors","result","description","undefined","getBasicUtils","context","tagNamePreference","mode","utils","reportSettings","message","report","loc","start","column","line","parseClosureTemplateTag","jsdocUtils","getPreferredTagNameObject","tagName","ret","getPreferredTagName","isObject","replacement","blocked","getUtils","node","jsdoc","jsdocNode","settings","iteratingAll","ruleConfig","ancestors","getAncestors","sourceCode","getSourceCode","overrideReplacesDocs","implementsReplacesDocs","augmentsExtendsReplacesDocs","maxLines","minLines","isIteratingFunction","type","isVirtualFunction","hasATag","stringify","tagBlock","getIndent","text","getText","noTrim","lastTag","tags","replace","reportJSDoc","msg","handler","fixer","replaceText","flattenRoots","params","getFunctionParameterNames","hasParams","isConstructor","getJsdocTagsDeep","skipReportingBlockedTag","allowObjectReturn","defaultMessage","hasTag","getTags","isValidTag","definedTags","comparePaths","dropPathSegmentQuotes","avoidDocs","classHasTag","exemptSpeciaMethods","meta","schema","exemptedBy","options","getPresentTags","forEach","method","otherModeMaps","otherResult","some","otherModeMap","otherMode","every","getTagStructureForMode","mde","structuredTags","hasDefinedTypeReturnTag","hasReturnValue","hasThrowValue","isAsync","async","filterTags","item","tagList","filter","getTagsByType","hasOptionTag","Boolean","getClassNode","reverse","find","parent","getClassJsdoc","classNode","classJsdocNode","repeat","classJsdoc","forEachPreferredTag","arrayHandler","targetTagName","matchingJsdocTags","_","matchingJsdocTag","getSettings","ignorePrivate","ignoreInternal","Number","preferredTypes","parserPath","setTagStructure","overrideTagStructure","error","makeReport","fix","jsdocLoc","lineNumber","end","colNumber","iterate","lines","iterator","state","sourceLine","charAt","checkInternal","checkPrivate","iterateAllJsdocs","trackedJsdocs","callIterator","jsdocNodes","lastCall","exit","create","reducedNode","comment","nonComment","push","allComments","getAllComments","untrackedJSdoc","checkFile","iterateJsdoc","metaType","TypeError","contexts","contextDefaults","enforcedContexts","checkJsdoc","getContextObject","ArrowFunctionExpression","FunctionDeclaration","FunctionExpression"],"mappings":"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","sourcesContent":["import {\n  // eslint-disable-next-line import/no-named-default\n  default as commentParser, stringify as commentStringify,\n} from 'comment-parser';\nimport _ from 'lodash';\nimport {\n  getJSDocComment, getReducedASTNode,\n} from './eslint/getJSDocComment';\nimport jsdocUtils from './jsdocUtils';\n\nconst globalState = new Map();\n\nconst skipSeeLink = (parser) => {\n  return (str, data) => {\n    if (data.tag === 'see' && (/\\{@link.+?\\}/u).test(str)) {\n      return null;\n    }\n\n    return parser(str, data);\n  };\n};\n\n/**\n *\n * @param {object} commentNode\n * @param {string} indent Whitespace\n * @param {boolean} [trim=true]\n * @returns {object}\n */\nconst parseComment = (commentNode, indent, trim = true) => {\n  // Preserve JSDoc block start/end indentation.\n  return commentParser(`${indent}/*${commentNode.value}${indent}*/`, {\n    // @see https://github.com/yavorskiy/comment-parser/issues/21\n    parsers: [\n      commentParser.PARSERS.parse_tag,\n      skipSeeLink(\n        (str, data) => {\n          if (['default', 'defaultvalue'].includes(data.tag)) {\n            return null;\n          }\n\n          return commentParser.PARSERS.parse_type(str, data);\n        },\n      ),\n      skipSeeLink(\n        (str, data) => {\n          if (data.tag === 'template') {\n            const preWS = str.match(/^[\\t ]+/)?.[0].length ?? 0;\n            const remainder = str.slice(preWS);\n\n            const pos = remainder.search(/(?<![\\s,])\\s/);\n\n            const name = pos === -1 ? remainder : remainder.slice(0, pos);\n\n            return {\n              data: {\n                name,\n                optional: false,\n              },\n              source: str.slice(0, preWS + pos),\n            };\n          }\n          if ([\n            'example', 'return', 'returns', 'throws', 'exception',\n            'access', 'version', 'since', 'license', 'author',\n            'default', 'defaultvalue',\n          ].includes(data.tag)) {\n            return null;\n          }\n\n          return commentParser.PARSERS.parse_name(str, data);\n        },\n      ),\n\n      // parse_description\n      (str, data) => {\n        // Only expected throw in previous step is if bad name (i.e.,\n        //   missing end bracket on optional name), but `@example`\n        //  skips name parsing\n        /* istanbul ignore next */\n        if (data.errors && data.errors.length) {\n          return null;\n        }\n\n        // Tweak original regex to capture only single optional space\n        const result = str.match(/^ ?((.|\\s)+)?/u);\n\n        // Always has at least whitespace due to `indent` we've added\n        /* istanbul ignore next */\n        if (result) {\n          return {\n            data: {\n              description: result[1] === undefined ? '' : result[1],\n            },\n            source: result[0],\n          };\n        }\n\n        // Always has at least whitespace due to `indent` we've added\n        /* istanbul ignore next */\n        return null;\n      },\n    ],\n    trim,\n  })[0] || {};\n};\n\nconst getBasicUtils = (context, {tagNamePreference, mode}) => {\n  const utils = {};\n  utils.reportSettings = (message) => {\n    context.report({\n      loc: {\n        start: {\n          column: 1,\n          line: 1,\n        },\n      },\n      message,\n    });\n  };\n\n  utils.parseClosureTemplateTag = (tag) => {\n    return jsdocUtils.parseClosureTemplateTag(tag);\n  };\n\n  utils.getPreferredTagNameObject = ({tagName}) => {\n    const ret = jsdocUtils.getPreferredTagName(context, mode, tagName, tagNamePreference);\n    const isObject = ret && typeof ret === 'object';\n    if (ret === false || isObject && !ret.replacement) {\n      return {\n        blocked: true,\n        tagName,\n      };\n    }\n\n    return ret;\n  };\n\n  return utils;\n};\n\nconst getUtils = (\n  node,\n  jsdoc,\n  jsdocNode,\n  settings,\n  report,\n  context,\n  iteratingAll,\n  ruleConfig,\n) => {\n  const ancestors = context.getAncestors();\n  const sourceCode = context.getSourceCode();\n\n  const utils = getBasicUtils(context, settings);\n\n  const {\n    tagNamePreference,\n    overrideReplacesDocs,\n    implementsReplacesDocs,\n    augmentsExtendsReplacesDocs,\n    maxLines,\n    minLines,\n    mode,\n  } = settings;\n\n  utils.isIteratingFunction = () => {\n    return !iteratingAll || [\n      'MethodDefinition',\n      'ArrowFunctionExpression',\n      'FunctionDeclaration',\n      'FunctionExpression',\n    ].includes(node && node.type);\n  };\n\n  utils.isVirtualFunction = () => {\n    return iteratingAll && utils.hasATag(['callback', 'function', 'func', 'method']);\n  };\n\n  utils.stringify = (tagBlock, tag) => {\n    const indent = tag ?\n      jsdocUtils.getIndent({\n        text: sourceCode.getText(\n          tag,\n          tag.loc.start.column,\n        ),\n      }) :\n      jsdocUtils.getIndent(sourceCode);\n\n    if (ruleConfig.noTrim) {\n      const lastTag = tagBlock.tags[tagBlock.tags.length - 1];\n      lastTag.description = lastTag.description.replace(/\\n$/, '');\n    }\n\n    return commentStringify([tagBlock], {indent}).slice(indent.length - 1);\n  };\n\n  utils.reportJSDoc = (msg, tag, handler) => {\n    report(msg, handler ? (fixer) => {\n      handler();\n      const replacement = utils.stringify(jsdoc, node);\n\n      return fixer.replaceText(jsdocNode, replacement);\n    } : null, tag);\n  };\n\n  utils.flattenRoots = (params) => {\n    return jsdocUtils.flattenRoots(params);\n  };\n\n  utils.getFunctionParameterNames = () => {\n    return jsdocUtils.getFunctionParameterNames(node);\n  };\n\n  utils.hasParams = () => {\n    return jsdocUtils.hasParams(node);\n  };\n\n  utils.isConstructor = () => {\n    return jsdocUtils.isConstructor(node);\n  };\n\n  utils.getJsdocTagsDeep = (tagName) => {\n    const name = utils.getPreferredTagName({tagName});\n    if (!name) {\n      return false;\n    }\n\n    return jsdocUtils.getJsdocTagsDeep(jsdoc, name);\n  };\n\n  utils.getPreferredTagName = ({tagName, skipReportingBlockedTag = false, allowObjectReturn = false, defaultMessage = `Unexpected tag \\`@${tagName}\\``}) => {\n    const ret = jsdocUtils.getPreferredTagName(context, mode, tagName, tagNamePreference);\n    const isObject = ret && typeof ret === 'object';\n    if (utils.hasTag(tagName) && (ret === false || isObject && !ret.replacement)) {\n      if (skipReportingBlockedTag) {\n        return {\n          blocked: true,\n          tagName,\n        };\n      }\n      const message = isObject && ret.message || defaultMessage;\n      report(message, null, utils.getTags(tagName)[0]);\n\n      return false;\n    }\n\n    return isObject && !allowObjectReturn ? ret.replacement : ret;\n  };\n\n  utils.isValidTag = (name, definedTags) => {\n    return jsdocUtils.isValidTag(context, mode, name, definedTags);\n  };\n\n  utils.hasATag = (name) => {\n    return jsdocUtils.hasATag(jsdoc, name);\n  };\n\n  utils.hasTag = (name) => {\n    return jsdocUtils.hasTag(jsdoc, name);\n  };\n\n  utils.comparePaths = (name) => {\n    return jsdocUtils.comparePaths(name);\n  };\n\n  utils.dropPathSegmentQuotes = (name) => {\n    return jsdocUtils.dropPathSegmentQuotes(name);\n  };\n\n  utils.avoidDocs = () => {\n    if (\n      overrideReplacesDocs !== false &&\n        (utils.hasTag('override') || utils.classHasTag('override')) ||\n      implementsReplacesDocs !== false &&\n        (utils.hasTag('implements') || utils.classHasTag('implements')) ||\n\n      augmentsExtendsReplacesDocs &&\n        (utils.hasATag(['augments', 'extends']) ||\n          utils.classHasTag('augments') ||\n            utils.classHasTag('extends'))) {\n      return true;\n    }\n\n    if (jsdocUtils.exemptSpeciaMethods(\n      jsdoc, node, context, ruleConfig.meta.schema,\n    )) {\n      return true;\n    }\n\n    const exemptedBy = context.options[0]?.exemptedBy ?? [\n      'inheritDoc',\n      ...mode === 'closure' ? [] : ['inheritdoc'],\n    ];\n    if (exemptedBy.length && utils.getPresentTags(exemptedBy).length) {\n      return true;\n    }\n\n    return false;\n  };\n\n  [\n    'tagMightHaveNamePosition',\n    'tagMightHaveTypePosition',\n  ].forEach((method) => {\n    utils[method] = (tagName, otherModeMaps) => {\n      const result = jsdocUtils[method](tagName);\n      if (result) {\n        return true;\n      }\n\n      if (!otherModeMaps) {\n        return false;\n      }\n\n      const otherResult = otherModeMaps.some((otherModeMap) => {\n        return jsdocUtils[method](tagName, otherModeMap);\n      });\n\n      return otherResult ? {otherMode: true} : false;\n    };\n  });\n\n  [\n    'tagMustHaveNamePosition',\n    'tagMustHaveTypePosition',\n    'tagMissingRequiredTypeOrNamepath',\n  ].forEach((method) => {\n    utils[method] = (tagName, otherModeMaps) => {\n      const result = jsdocUtils[method](tagName);\n      if (!result) {\n        return false;\n      }\n\n      // if (!otherModeMaps) { return true; }\n\n      const otherResult = otherModeMaps.every((otherModeMap) => {\n        return jsdocUtils[method](tagName, otherModeMap);\n      });\n\n      return otherResult ? true : {otherMode: false};\n    };\n  });\n\n  [\n    'isNamepathDefiningTag',\n    'tagMightHaveNamepath',\n  ].forEach((method) => {\n    utils[method] = (tagName) => {\n      return jsdocUtils[method](tagName);\n    };\n  });\n\n  utils.getTagStructureForMode = (mde) => {\n    return jsdocUtils.getTagStructureForMode(mde, settings.structuredTags);\n  };\n\n  utils.hasDefinedTypeReturnTag = (tag) => {\n    return jsdocUtils.hasDefinedTypeReturnTag(tag);\n  };\n\n  utils.hasReturnValue = () => {\n    return jsdocUtils.hasReturnValue(node);\n  };\n\n  utils.hasThrowValue = () => {\n    return jsdocUtils.hasThrowValue(node);\n  };\n\n  utils.isAsync = () => {\n    return node.async;\n  };\n\n  utils.getTags = (tagName) => {\n    return utils.filterTags((item) => {\n      return item.tag === tagName;\n    });\n  };\n\n  utils.getPresentTags = (tagList) => {\n    return utils.filterTags((tag) => {\n      return tagList.includes(tag.tag);\n    });\n  };\n\n  utils.filterTags = (filter) => {\n    return jsdocUtils.filterTags(jsdoc.tags, filter);\n  };\n\n  utils.getTagsByType = (tags) => {\n    return jsdocUtils.getTagsByType(context, mode, tags, tagNamePreference);\n  };\n\n  utils.hasOptionTag = (tagName) => {\n    const {tags} = context.options[0] ?? {};\n\n    return Boolean(tags && tags.includes(tagName));\n  };\n\n  utils.getClassNode = () => {\n    return [...ancestors, node].reverse().find((parent) => {\n      return parent && ['ClassDeclaration', 'ClassExpression'].includes(parent.type);\n    }) || null;\n  };\n\n  utils.getClassJsdoc = () => {\n    const classNode = utils.getClassNode();\n\n    if (!classNode) {\n      return null;\n    }\n\n    const classJsdocNode = getJSDocComment(sourceCode, classNode, {\n      maxLines,\n      minLines,\n    });\n\n    if (classJsdocNode) {\n      const indent = ' '.repeat(classJsdocNode.loc.start.column);\n\n      return parseComment(classJsdocNode, indent);\n    }\n\n    return null;\n  };\n\n  utils.classHasTag = (tagName) => {\n    const classJsdoc = utils.getClassJsdoc();\n\n    return Boolean(classJsdoc) && jsdocUtils.hasTag(classJsdoc, tagName);\n  };\n\n  utils.forEachPreferredTag = (tagName, arrayHandler, skipReportingBlockedTag = false) => {\n    const targetTagName = utils.getPreferredTagName({\n      skipReportingBlockedTag,\n      tagName,\n    });\n    if (!targetTagName ||\n      skipReportingBlockedTag && targetTagName && typeof targetTagName === 'object'\n    ) {\n      return;\n    }\n    const matchingJsdocTags = _.filter(jsdoc.tags || [], {\n      tag: targetTagName,\n    });\n\n    matchingJsdocTags.forEach((matchingJsdocTag) => {\n      arrayHandler(matchingJsdocTag, targetTagName);\n    });\n  };\n\n  return utils;\n};\n\nconst getSettings = (context) => {\n  /* eslint-disable sort-keys-fix/sort-keys-fix */\n  const settings = {\n    // All rules\n    ignorePrivate: Boolean(context.settings.jsdoc?.ignorePrivate),\n    ignoreInternal: Boolean(context.settings.jsdoc?.ignoreInternal),\n    maxLines: Number(context.settings.jsdoc?.maxLines ?? 1),\n    minLines: Number(context.settings.jsdoc?.minLines ?? 0),\n\n    // `check-tag-names` and many returns/param rules\n    tagNamePreference: context.settings.jsdoc?.tagNamePreference ?? {},\n\n    // `check-types` and `no-undefined-types`\n    preferredTypes: context.settings.jsdoc?.preferredTypes ?? {},\n\n    // `check-types`, `no-undefined-types`, `valid-types`\n    structuredTags: context.settings.jsdoc?.structuredTags ?? {},\n\n    // `require-param`, `require-description`, `require-example`, `require-returns`\n    overrideReplacesDocs: context.settings.jsdoc?.overrideReplacesDocs,\n    implementsReplacesDocs: context.settings.jsdoc?.implementsReplacesDocs,\n    augmentsExtendsReplacesDocs: context.settings.jsdoc?.augmentsExtendsReplacesDocs,\n\n    // Many rules, e.g., `check-tag-names`\n    mode: context.settings.jsdoc?.mode ??\n      (context.parserPath.includes('@typescript-eslint') ? 'typescript' : 'jsdoc'),\n  };\n  /* eslint-enable sort-keys-fix/sort-keys-fix */\n\n  jsdocUtils.setTagStructure(settings.mode);\n  try {\n    jsdocUtils.overrideTagStructure(settings.structuredTags);\n  } catch (error) {\n    context.report({\n      loc: {\n        start: {\n          column: 1,\n          line: 1,\n        },\n      },\n      message: error.message,\n    });\n\n    return false;\n  }\n\n  return settings;\n};\n\n/**\n * Create the report function\n *\n * @param {object} context\n * @param {object} commentNode\n */\nconst makeReport = (context, commentNode) => {\n  const report = (message, fix = null, jsdocLoc = null, data = null) => {\n    let loc;\n\n    if (jsdocLoc) {\n      const lineNumber = commentNode.loc.start.line + jsdocLoc.line;\n\n      loc = {\n        end: {line: lineNumber},\n        start: {line: lineNumber},\n      };\n      if (jsdocLoc.column) {\n        const colNumber = commentNode.loc.start.column + jsdocLoc.column;\n\n        loc.end.column = colNumber;\n        loc.start.column = colNumber;\n      }\n    }\n\n    context.report({\n      data,\n      fix,\n      loc,\n      message,\n      node: commentNode,\n    });\n  };\n\n  return report;\n};\n\n/**\n * @typedef {ReturnType<typeof getUtils>} Utils\n * @typedef {ReturnType<typeof getSettings>} Settings\n * @typedef {(\n *   arg: {\n *     context: object,\n *     sourceCode: object,\n *     indent: string,\n *     jsdoc: object,\n *     jsdocNode: object,\n *     node: object | null,\n *     report: ReturnType<typeof makeReport>,\n *     settings: Settings,\n *     utils: Utils,\n *   }\n * ) => any } JsdocVisitor\n */\n\nconst iterate = (\n  ruleConfig, context, lines, jsdocNode, node, settings,\n  sourceCode, iterator, state, iteratingAll,\n) => {\n  const sourceLine = lines[jsdocNode.loc.start.line - 1];\n  const indent = sourceLine.charAt(0).repeat(jsdocNode.loc.start.column);\n  const jsdoc = parseComment(jsdocNode, indent, !ruleConfig.noTrim);\n  const report = makeReport(context, jsdocNode);\n\n  const utils = getUtils(\n    node,\n    jsdoc,\n    jsdocNode,\n    settings,\n    report,\n    context,\n    iteratingAll,\n    ruleConfig,\n  );\n\n  if (\n    !ruleConfig.checkInternal && settings.ignoreInternal &&\n    utils.hasTag('internal')\n  ) {\n    return;\n  }\n  if (\n    !ruleConfig.checkPrivate && settings.ignorePrivate &&\n    (utils.hasTag('private') || _.filter(jsdoc.tags, {\n      tag: 'access',\n    }).some(({description}) => {\n      return description === 'private';\n    }))\n  ) {\n    return;\n  }\n\n  iterator({\n    context,\n    globalState,\n    indent,\n    iteratingAll,\n    jsdoc,\n    jsdocNode,\n    node,\n    report,\n    settings,\n    sourceCode,\n    state,\n    utils,\n  });\n};\n\n/**\n * Create an eslint rule that iterates over all JSDocs, regardless of whether\n * they are attached to a function-like node.\n *\n * @param {JsdocVisitor} iterator\n * @param {{meta: any}} ruleConfig\n */\nconst iterateAllJsdocs = (iterator, ruleConfig) => {\n  const trackedJsdocs = [];\n\n  let settings;\n  const callIterator = (context, node, jsdocNodes, state, lastCall) => {\n    const sourceCode = context.getSourceCode();\n    const {lines} = sourceCode;\n\n    const utils = getBasicUtils(context, settings);\n    jsdocNodes.forEach((jsdocNode) => {\n      if (!(/^\\/\\*\\*\\s/).test(sourceCode.getText(jsdocNode))) {\n        return;\n      }\n      iterate(\n        ruleConfig, context, lines, jsdocNode, node,\n        settings, sourceCode, iterator,\n        state, true,\n      );\n    });\n    if (lastCall && ruleConfig.exit) {\n      ruleConfig.exit({\n        context,\n        state,\n        utils,\n      });\n    }\n  };\n\n  return {\n    create (context) {\n      const sourceCode = context.getSourceCode();\n      settings = getSettings(context);\n      if (!settings) {\n        return {};\n      }\n\n      const state = {};\n\n      return {\n        '*:not(Program)' (node) {\n          const reducedNode = getReducedASTNode(node, sourceCode);\n\n          if (node !== reducedNode) {\n            return;\n          }\n\n          const comment = getJSDocComment(sourceCode, node, settings);\n          if (trackedJsdocs.includes(comment)) {\n            return;\n          }\n          if (!comment) {\n            if (ruleConfig.nonComment) {\n              ruleConfig.nonComment({\n                node,\n                state,\n              });\n            }\n\n            return;\n          }\n\n          trackedJsdocs.push(comment);\n          callIterator(context, node, [comment], state);\n        },\n        'Program:exit' () {\n          const allComments = sourceCode.getAllComments();\n          const untrackedJSdoc = allComments.filter((node) => {\n            return !trackedJsdocs.includes(node);\n          });\n\n          callIterator(context, null, untrackedJSdoc, state, true);\n        },\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n};\n\n/**\n * Create an eslint rule that iterates over all JSDocs, regardless of whether\n * they are attached to a function-like node.\n *\n * @param {JsdocVisitor} iterator\n * @param {{meta: any}} ruleConfig\n */\nconst checkFile = (iterator, ruleConfig) => {\n  return {\n    create (context) {\n      const sourceCode = context.getSourceCode();\n      const settings = getSettings(context);\n      if (!settings) {\n        return {};\n      }\n\n      return {\n        'Program:exit' () {\n          const allComments = sourceCode.getAllComments();\n          const {lines} = sourceCode;\n          const utils = getBasicUtils(context, settings);\n\n          iterator({\n            allComments,\n            context,\n            lines,\n            makeReport,\n            settings,\n            sourceCode,\n            utils,\n          });\n        },\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n};\n\nexport {\n  getSettings,\n  parseComment,\n};\n\n/**\n * @param {JsdocVisitor} iterator\n * @param {{\n *   meta: any,\n *   contextDefaults?: true | string[],\n *   iterateAllJsdocs?: true,\n * }} ruleConfig\n */\nexport default function iterateJsdoc (iterator, ruleConfig) {\n  const metaType = ruleConfig?.meta?.type;\n  if (!metaType || !['problem', 'suggestion', 'layout'].includes(metaType)) {\n    throw new TypeError('Rule must include `meta.type` option (with value \"problem\", \"suggestion\", or \"layout\")');\n  }\n  if (typeof iterator !== 'function') {\n    throw new TypeError('The iterator argument must be a function.');\n  }\n\n  if (ruleConfig.checkFile) {\n    return checkFile(iterator, ruleConfig);\n  }\n\n  if (ruleConfig.iterateAllJsdocs) {\n    return iterateAllJsdocs(iterator, ruleConfig);\n  }\n\n  return {\n    /**\n     * The entrypoint for the JSDoc rule.\n     *\n     * @param {*} context\n     *   a reference to the context which hold all important information\n     *   like settings and the sourcecode to check.\n     * @returns {object}\n     *   a list with parser callback function.\n     */\n    create (context) {\n      let contexts;\n      if (ruleConfig.contextDefaults) {\n        contexts = jsdocUtils.enforcedContexts(context, ruleConfig.contextDefaults);\n        if (contexts.includes('any')) {\n          return iterateAllJsdocs(iterator, ruleConfig).create(context);\n        }\n      }\n\n      const sourceCode = context.getSourceCode();\n      const settings = getSettings(context);\n      if (!settings) {\n        return {};\n      }\n      const {lines} = sourceCode;\n\n      const checkJsdoc = (node) => {\n        const jsdocNode = getJSDocComment(sourceCode, node, settings);\n\n        if (!jsdocNode) {\n          return;\n        }\n\n        iterate(\n          ruleConfig, context, lines, jsdocNode, node,\n          settings, sourceCode, iterator,\n        );\n      };\n\n      if (ruleConfig.contextDefaults) {\n        return jsdocUtils.getContextObject(contexts, checkJsdoc);\n      }\n\n      return {\n        ArrowFunctionExpression: checkJsdoc,\n        FunctionDeclaration: checkJsdoc,\n        FunctionExpression: checkJsdoc,\n      };\n    },\n    meta: ruleConfig.meta,\n  };\n}\n"],"file":"iterateJsdoc.js"}