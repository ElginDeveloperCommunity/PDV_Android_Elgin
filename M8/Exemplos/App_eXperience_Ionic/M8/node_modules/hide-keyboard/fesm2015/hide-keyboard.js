import { Directive, ElementRef, HostListener, NgModule } from '@angular/core';

class HideKeyboardDirective {
    constructor(el) {
        this.el = el;
        this.focusTimeout = 500;
        this.readonly = true;
        this.setReadOnly(this.readonly);
        setTimeout(() => {
            this.el.nativeElement.focus();
        }, this.focusTimeout);
    }
    onFocus() {
        this.readonly = true;
        this.setReadOnly(this.readonly);
        if (!this.readonly) {
            this.setReadOnly(!this.readonly);
        }
        setTimeout(() => {
            this.readonly = false;
            this.setReadOnly(this.readonly);
        }, 100);
    }
    ;
    onClick(input) {
        this.readonly = true;
        this.setReadOnly(this.readonly);
        setTimeout(() => {
            this.readonly = false;
            this.setReadOnly(this.readonly);
            this.el.nativeElement.focus();
        }, this.focusTimeout);
    }
    setReadOnly(value) {
        this.el.nativeElement.readOnly = value;
        if (this.el.nativeElement.children && this.el.nativeElement.children.length > 0) {
            this.el.nativeElement.children[0].readOnly = value;
            if (this.el.nativeElement.children.length > 1) {
                this.el.nativeElement.children[1].readOnly = value;
            }
        }
        ;
    }
    ;
}
HideKeyboardDirective.decorators = [
    { type: Directive, args: [{
                selector: '[hideKeyboard]'
            },] }
];
HideKeyboardDirective.ctorParameters = () => [
    { type: ElementRef }
];
HideKeyboardDirective.propDecorators = {
    onFocus: [{ type: HostListener, args: ['focus',] }],
    onClick: [{ type: HostListener, args: ['click', ['$event.target'],] }]
};

class HideKeyboardModule {
    static forRoot() {
        return {
            ngModule: HideKeyboardModule,
            providers: []
        };
    }
}
HideKeyboardModule.decorators = [
    { type: NgModule, args: [{
                declarations: [HideKeyboardDirective],
                exports: [HideKeyboardDirective]
            },] }
];

/*
 * Public API Surface of hide-keyboard
 */

/**
 * Generated bundle index. Do not edit.
 */

export { HideKeyboardDirective, HideKeyboardModule };
//# sourceMappingURL=hide-keyboard.js.map
